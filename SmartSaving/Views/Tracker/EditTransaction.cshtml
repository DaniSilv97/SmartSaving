@model SmartSaving.Models.Transaction
@{
    ViewBag.Title = "Edit Transaction";
    Layout = "_Layout";
}

<div class="max-w-2xl mx-auto py-8">
    <!-- Header -->
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900">Edit Transaction</h1>
        <p class="text-gray-600 mt-2">Update transaction for tracker @ViewBag.TrackerDate</p>
    </div>

    <!-- Form Card -->
    <div class="bg-white shadow-lg rounded-lg p-8">
        <form action="@Url.Action("EditTransaction", "Tracker", new { id = Model.GuidTransaction, trackerId = ViewBag.TrackerId })" method="post" class="space-y-6">
            <input name="__RequestVerificationToken" type="hidden" value="@Html.AntiForgeryToken().ToString()" />
            <input type="hidden" name="GuidTracker" value="@Model.GuidTracker" />

            <!-- Transaction Type -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-3">Transaction Type</label>
                <div class="grid grid-cols-2 gap-4">
                    <label class="relative">
                        <input type="radio" name="TransactionType" value="1" id="income-radio" class="sr-only peer"
                        @(Model.TransactionType == SmartSaving.Models.Transaction.TransactionTypes.Income ? "checked" : "") />
                        <div class="w-full p-4 border-2 border-gray-300 rounded-lg cursor-pointer peer-checked:border-green-500 peer-checked:bg-green-50 hover:bg-gray-50 transition-all duration-200">
                            <div class="flex items-center justify-center">
                                <svg class="w-8 h-8 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 11l5-5m0 0l5 5m-5-5v12"></path>
                                </svg>
                                <div>
                                    <p class="font-medium text-gray-900">Income</p>
                                    <p class="text-sm text-gray-600">Money received</p>
                                </div>
                            </div>
                        </div>
                    </label>

                    <label class="relative">
                        <input type="radio" name="TransactionType" value="2" id="expense-radio" class="sr-only peer"
                        @(Model.TransactionType == SmartSaving.Models.Transaction.TransactionTypes.Expense ? "checked" : "") />
                        <div class="w-full p-4 border-2 border-gray-300 rounded-lg cursor-pointer peer-checked:border-red-500 peer-checked:bg-red-50 hover:bg-gray-50 transition-all duration-200">
                            <div class="flex items-center justify-center">
                                <svg class="w-8 h-8 text-red-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 13l-5 5m0 0l-5-5m5 5V6"></path>
                                </svg>
                                <div>
                                    <p class="font-medium text-gray-900">Expense</p>
                                    <p class="text-sm text-gray-600">Money spent</p>
                                </div>
                            </div>
                        </div>
                    </label>
                </div>
            </div>

            <!-- Amount -->
            <div>
                <label for="Value" class="block text-sm font-medium text-gray-700 mb-2">
                    Amount (€)
                </label>
                <div class="mt-1 relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <span class="text-gray-500 sm:text-sm">€</span>
                    </div>
                    <input type="number" id="Value" name="Value" step="0.01" min="0" required
                           value="@Model.Value.ToString("F2")"
                           class="block w-full pl-8 pr-12 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                           placeholder="0.00" />
                </div>
            </div>

            <!-- Date -->
            <div>
                <label for="Date" class="block text-sm font-medium text-gray-700 mb-2">
                    Transaction Date
                </label>
                <div class="mt-1">
                    <input type="datetime-local" id="Date" name="Date" required
                           value="@Model.Date.ToString("yyyy-MM-ddTHH:mm")"
                           class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" />
                </div>
                <p class="mt-1 text-xs text-gray-500">
                    When did this transaction occur?
                </p>
            </div>

            <!-- Description -->
            <div>
                <label for="Description" class="block text-sm font-medium text-gray-700 mb-2">
                    Description <span class="text-gray-400">(Optional)</span>
                </label>
                <div class="mt-1">
                    <input type="text" id="Description" name="Description" maxlength="255"
                           value="@(Model.Description ?? "")"
                           class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                           placeholder="Enter a description for this transaction" />
                </div>
            </div>

            <!-- Quick Amount Buttons -->
            <div class="bg-gray-50 rounded-lg p-4">
                <h3 class="text-sm font-medium text-gray-700 mb-3">Quick Amounts</h3>
                <div class="grid grid-cols-4 gap-2">
                    <button type="button" onclick="setAmount(10)" class="bg-white hover:bg-gray-100 border border-gray-300 text-gray-700 px-3 py-2 rounded text-sm">€10</button>
                    <button type="button" onclick="setAmount(25)" class="bg-white hover:bg-gray-100 border border-gray-300 text-gray-700 px-3 py-2 rounded text-sm">€25</button>
                    <button type="button" onclick="setAmount(50)" class="bg-white hover:bg-gray-100 border border-gray-300 text-gray-700 px-3 py-2 rounded text-sm">€50</button>
                    <button type="button" onclick="setAmount(100)" class="bg-white hover:bg-gray-100 border border-gray-300 text-gray-700 px-3 py-2 rounded text-sm">€100</button>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="flex justify-between pt-6">
                <a href="@Url.Action("Inspect", "Tracker", new { id = ViewBag.TrackerId })"
                   class="bg-gray-300 hover:bg-gray-400 text-gray-700 font-medium py-2 px-4 rounded-md transition duration-150 ease-in-out">
                    Cancel
                </a>
                <div class="flex space-x-3">
                    <a href="@Url.Action("DeleteTransaction", "Tracker", new { id = Model.GuidTransaction, trackerId = ViewBag.TrackerId })"
                       class="bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded-md transition duration-150 ease-in-out"
                       onclick="return confirm('Are you sure you want to delete this transaction?')">
                        Delete
                    </a>
                    <button type="submit"
                            class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-md transition duration-150 ease-in-out">
                        Update Transaction
                    </button>
                </div>
            </div>
        </form>
    </div>

    <!-- Help Section -->
    <div class="mt-8 bg-yellow-50 border border-yellow-200 rounded-lg p-6">
        <div class="flex items-start">
            <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                </svg>
            </div>
            <div class="ml-3">
                <h3 class="text-sm font-medium text-yellow-800">Editing Transaction</h3>
                <div class="text-sm text-yellow-700 mt-1 space-y-1">
                    <p>• Make sure the amount and type are correct before saving</p>
                    <p>• Changing the date will affect your tracker's timeline</p>
                    <p>• Use the delete button if you want to remove this transaction completely</p>
                    <p>• All changes are permanent once saved</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function setAmount(amount) {
            document.getElementById('Value').value = amount.toFixed(2);
            document.getElementById('Value').focus();
        }

        document.addEventListener('DOMContentLoaded', function() {
            // Focus on amount field when page loads for editing
            document.getElementById('Value').focus();
            document.getElementById('Value').select();

            // Format amount on blur
            const valueInput = document.getElementById('Value');
            valueInput.addEventListener('blur', function() {
                if (this.value && !isNaN(this.value)) {
                    this.value = parseFloat(this.value).toFixed(2);
                }
            });

            // Confirm before deleting
            const deleteLink = document.querySelector('a[href*="DeleteTransaction"]');
            if (deleteLink) {
                deleteLink.addEventListener('click', function(e) {
                    if (!confirm('Are you sure you want to delete this transaction? This action cannot be undone.')) {
                        e.preventDefault();
                    }
                });
            }
        });
    </script>
}